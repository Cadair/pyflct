%!PS-Adobe-3.0
%%BoundingBox: 38 24 574 768
%%Title: Enscript Output
%%For: fisher
%%Creator: GNU enscript 1.6.4
%%CreationDate: Tue Oct 13 23:41:33 2009
%%Orientation: Portrait
%%Pages: (atend)
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 4
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 4
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 10 10 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [612 792] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-simple 1.6 4

/do_header {	% print default simple header
  gsave
    d_header_x d_header_y HFpt_h 3 div add translate

    HF setfont
    user_header_p {
      5 0 moveto user_header_left_str show

      d_header_w user_header_center_str stringwidth pop sub 2 div
      0 moveto user_header_center_str show

      d_header_w user_header_right_str stringwidth pop sub 5 sub
      0 moveto user_header_right_str show
    } {
      5 0 moveto fname show
      45 0 rmoveto fmodstr show
      45 0 rmoveto pagenumstr show
    } ifelse

  grestore
} def
%%EndResource
/d_page_w 536 def
/d_page_h 744 def
/d_header_x 0 def
/d_header_y 729 def
/d_header_w 536 def
/d_header_h 15 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 536 def
/d_footer_h 0 def
/d_output_w 536 def
/d_output_h 729 def
/cols 1 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname () def
/fdir () def
/ftail () def
% User defined strings:
/fmodstr (Tue Oct 13 23:41:33 2009) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str () def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
5 716 M
(WARP\(1.01\)                       User Manuals                       WARP\(1.01\)) s
5 672 M
(N) s
5 672 M
(NA) s
11 672 M
(AM) s
17 672 M
(ME) s
23 672 M
(E) s
5 661 M
(       warp - apply a uniform shift or non-uniform shift \(warp\) to an image) s
5 639 M
(S) s
5 639 M
(SY) s
11 639 M
(YN) s
17 639 M
(NO) s
23 639 M
(OP) s
29 639 M
(PS) s
35 639 M
(SI) s
41 639 M
(IS) s
47 639 M
(S) s
5 628 M
(       w) s
47 628 M
(wa) s
53 628 M
(ar) s
59 628 M
(rp) s
65 628 M
(p _) s
77 628 M
(i_) s
83 628 M
(m_) s
89 628 M
(a_) s
95 628 M
(g_) s
101 628 M
(e_) s
107 628 M
(-_) s
113 628 M
(f_) s
119 628 M
(i_) s
125 628 M
(l_) s
131 628 M
(e _) s
143 628 M
(s_) s
149 628 M
(h_) s
155 628 M
(i_) s
161 628 M
(f_) s
167 628 M
(t_) s
173 628 M
(-_) s
179 628 M
(f_) s
185 628 M
(i_) s
191 628 M
(l_) s
197 628 M
(e _) s
209 628 M
(o_) s
215 628 M
(u_) s
221 628 M
(t_) s
227 628 M
(-_) s
233 628 M
(f_) s
239 628 M
(i_) s
245 628 M
(l_) s
251 628 M
(e [) s
263 628 M
([ _) s
275 628 M
(-_) s
281 628 M
(q ]) s
293 628 M
(] .) s
305 628 M
(..) s
311 628 M
(..) s
317 628 M
(.) s
5 606 M
(D) s
5 606 M
(DE) s
11 606 M
(ES) s
17 606 M
(SC) s
23 606 M
(CR) s
29 606 M
(RI) s
35 606 M
(IP) s
41 606 M
(PT) s
47 606 M
(TI) s
53 606 M
(IO) s
59 606 M
(ON) s
65 606 M
(N) s
5 595 M
(       w) s
47 595 M
(wa) s
53 595 M
(ar) s
59 595 M
(rp) s
65 595 M
(p shifts a 2-D image, f, read in from _) s
293 595 M
(i_) s
299 595 M
(m_) s
305 595 M
(a_) s
311 595 M
(g_) s
317 595 M
(e_) s
323 595 M
(-_) s
329 595 M
(f_) s
335 595 M
(i_) s
341 595 M
(l_) s
347 595 M
(e by shift amplitudes) s
5 584 M
(       delx, dely, read in from _) s
197 584 M
(s_) s
203 584 M
(h_) s
209 584 M
(i_) s
215 584 M
(f_) s
221 584 M
(t_) s
227 584 M
(-_) s
233 584 M
(f_) s
239 584 M
(i_) s
245 584 M
(l_) s
251 584 M
(e and computes a shifted  image,  fs,) s
5 573 M
(       which is written to _) s
167 573 M
(o_) s
173 573 M
(u_) s
179 573 M
(t_) s
185 573 M
(-_) s
191 573 M
(f_) s
197 573 M
(i_) s
203 573 M
(l_) s
209 573 M
(e_) s
215 573 M
(.) s
5 551 M
(       The image, f, can be written to _) s
239 551 M
(i_) s
245 551 M
(m_) s
251 551 M
(a_) s
257 551 M
(g_) s
263 551 M
(e_) s
269 551 M
(-_) s
275 551 M
(f_) s
281 551 M
(i_) s
287 551 M
(l_) s
293 551 M
(e with the IDL procedure vcim-) s
5 540 M
(       age1out.pro.  Files written with  vcimage2out.pro,  or  vcimage3out.pro) s
5 529 M
(       can  be  used  as  well, but warp will only read the 1st image from the) s
5 518 M
(       file.) s
5 496 M
(       The shift amplitudes, delx and dely, can be either  scalars,  in  which) s
5 485 M
(       case  the  shifts  are  uniform, or they can be 2d arrays with the same) s
5 474 M
(       dimensions as the image f, in which case  the  shifts  are  non-uniform) s
5 463 M
(       \(warping\).   The  units of delx, dely are assumed to be in pixel units.) s
5 452 M
(       The shifts delx, dely can be  written  with  the  IDL  procedure  vcim-) s
5 441 M
(       age2out.pro.) s
5 419 M
(       After the input image has been shifted or warped, and written into _) s
449 419 M
(o_) s
455 419 M
(u_) s
461 419 M
(t_) s
467 419 M
(-) s
5 408 M
(       _) s
47 408 M
(f_) s
53 408 M
(i_) s
59 408 M
(l_) s
65 408 M
(e it can be read into  an  IDL  session  with  the  procedure  vcim-) s
5 397 M
(       age1in.pro .) s
5 375 M
(       All  of  these IDL procedures are in the IDL-io-procedures folder.  The) s
5 364 M
(       data in _) s
95 364 M
(i_) s
101 364 M
(m_) s
107 364 M
(a_) s
113 364 M
(g_) s
119 364 M
(e_) s
125 364 M
(-_) s
131 364 M
(f_) s
137 364 M
(i_) s
143 364 M
(l_) s
149 364 M
(e , _) s
173 364 M
(s_) s
179 364 M
(h_) s
185 364 M
(i_) s
191 364 M
(f_) s
197 364 M
(t_) s
203 364 M
(-_) s
209 364 M
(f_) s
215 364 M
(i_) s
221 364 M
(l_) s
227 364 M
(e , and _) s
275 364 M
(o_) s
281 364 M
(u_) s
287 364 M
(t_) s
293 364 M
(-_) s
299 364 M
(f_) s
305 364 M
(i_) s
311 364 M
(l_) s
317 364 M
(e are  stored  in  binary,) s
5 353 M
(       large-endian  byte  order,  and w) s
239 353 M
(wa) s
245 353 M
(ar) s
251 353 M
(rp) s
257 353 M
(p and the IDL I/O procedures to read) s
5 342 M
(       and write the files should be platform independent.) s
5 320 M
(       The w) s
71 320 M
(wa) s
77 320 M
(ar) s
83 320 M
(rp) s
89 320 M
(p program has the same functionality as the shift_frac2d.pro IDL) s
5 309 M
(       procedure,  but  is  considerably  faster when perfoming image warping.) s
5 298 M
(       The mathematical technique is based on the fact that shifting an  image) s
5 287 M
(       can  be viewed as the convolving the image with a delta function at the) s
5 276 M
(       desired shift.  The Fourier transform of  the  delta  function  can  be) s
5 265 M
(       written  analytically,  allowing one to compute the shifted image using) s
5 254 M
(       standard Fourier transform techniques.) s
5 221 M
(O) s
5 221 M
(OP) s
11 221 M
(PT) s
17 221 M
(TI) s
23 221 M
(IO) s
29 221 M
(ON) s
35 221 M
(NS) s
41 221 M
(S) s
5 210 M
(       -q     If this flag is set, no non-error output is sent to s) s
401 210 M
(st) s
407 210 M
(td) s
413 210 M
(do) s
419 210 M
(ou) s
425 210 M
(ut) s
431 210 M
(t.) s
437 210 M
(.) s
5 177 M
(E) s
5 177 M
(EX) s
11 177 M
(XA) s
17 177 M
(AM) s
23 177 M
(MP) s
29 177 M
(PL) s
35 177 M
(LE) s
41 177 M
(ES) s
47 177 M
(S) s
5 166 M
(       e) s
47 166 M
(ex) s
53 166 M
(xa) s
59 166 M
(am) s
65 166 M
(mp) s
71 166 M
(pl) s
77 166 M
(le) s
83 166 M
(e w) s
95 166 M
(wa) s
101 166 M
(ar) s
107 166 M
(rp) s
113 166 M
(pi) s
119 166 M
(in) s
125 166 M
(ng) s
131 166 M
(g a) s
143 166 M
(an) s
149 166 M
(n i) s
161 166 M
(im) s
167 166 M
(ma) s
173 166 M
(ag) s
179 166 M
(ge) s
185 166 M
(e i) s
197 166 M
(in) s
203 166 M
(n a) s
215 166 M
(an) s
221 166 M
(n I) s
233 166 M
(ID) s
239 166 M
(DL) s
245 166 M
(L s) s
257 166 M
(se) s
263 166 M
(es) s
269 166 M
(ss) s
275 166 M
(si) s
281 166 M
(io) s
287 166 M
(on) s
293 166 M
(n:) s
299 166 M
(:) s
5 144 M
(              IDL>f1=randomu\(seed,201,101\)) s
5 122 M
(              IDL>vcimage1out,f1,'imagefile.dat') s
5 100 M
(              IDL>delx=cos\(!pi*findgen\(201\)/200.\)#sin\(!pi*findgen\(101\)/100.\)) s
5 78 M
(              IDL>dely=sin\(!pi*findgen\(201\)/200.\)#cos\(!pi*findgen\(101\)/100.\)) s
5 56 M
(              IDL>vcimage2out,delx,dely,'shiftfile.dat') s
5 34 M
(              IDL>$warp imagefile.dat shiftfile.dat outfile.dat) s
5 12 M
(              IDL>vcimage1in,f2,'outfile.dat') s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname () def
/fdir () def
/ftail () def
% User defined strings:
/fmodstr (Tue Oct 13 23:41:33 2009) def
/pagenumstr (2) def
/user_header_p true def
/user_header_left_str () def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
do_header
5 705 M
(       e) s
47 705 M
(ex) s
53 705 M
(xa) s
59 705 M
(am) s
65 705 M
(mp) s
71 705 M
(pl) s
77 705 M
(le) s
83 705 M
(e a) s
95 705 M
(ap) s
101 705 M
(pp) s
107 705 M
(pl) s
113 705 M
(ly) s
119 705 M
(yi) s
125 705 M
(in) s
131 705 M
(ng) s
137 705 M
(g a) s
149 705 M
(a u) s
161 705 M
(un) s
167 705 M
(ni) s
173 705 M
(if) s
179 705 M
(fo) s
185 705 M
(or) s
191 705 M
(rm) s
197 705 M
(m,) s
203 705 M
(, n) s
215 705 M
(no) s
221 705 M
(on) s
227 705 M
(n-) s
233 705 M
(-i) s
239 705 M
(in) s
245 705 M
(nt) s
251 705 M
(te) s
257 705 M
(eg) s
263 705 M
(ge) s
269 705 M
(er) s
275 705 M
(r s) s
287 705 M
(sh) s
293 705 M
(hi) s
299 705 M
(if) s
305 705 M
(ft) s
311 705 M
(t t) s
323 705 M
(to) s
329 705 M
(o a) s
341 705 M
(an) s
347 705 M
(n  i) s
365 705 M
(im) s
371 705 M
(ma) s
377 705 M
(ag) s
383 705 M
(ge) s
389 705 M
(e  i) s
407 705 M
(in) s
413 705 M
(n  a) s
431 705 M
(an) s
437 705 M
(n  I) s
455 705 M
(ID) s
461 705 M
(DL) s
467 705 M
(L) s
5 694 M
(       s) s
47 694 M
(se) s
53 694 M
(es) s
59 694 M
(ss) s
65 694 M
(si) s
71 694 M
(io) s
77 694 M
(on) s
83 694 M
(n:) s
89 694 M
(:) s
5 672 M
(              IDL>f1=randomu\(seed,201,101\)) s
5 650 M
(              IDL>vcimage1out,f1,'imagefile.dat') s
5 628 M
(              IDL>delx=1.5) s
5 606 M
(              IDL>dely=-0.5) s
5 584 M
(              IDL>vcimage2out,delx,dely,'shiftfile.dat') s
5 562 M
(              IDL>$warp imagefile.dat shiftfile.dat outfile.dat) s
5 540 M
(              IDL>vcimage1in,f2,'outfile.dat') s
5 518 M
(       P) s
47 518 M
(Pr) s
53 518 M
(ri) s
59 518 M
(in) s
65 518 M
(nt) s
71 518 M
(t o) s
83 518 M
(ou) s
89 518 M
(ut) s
95 518 M
(t s) s
107 518 M
(sh) s
113 518 M
(ho) s
119 518 M
(or) s
125 518 M
(rt) s
131 518 M
(t s) s
143 518 M
(su) s
149 518 M
(um) s
155 518 M
(mm) s
161 518 M
(ma) s
167 518 M
(ar) s
173 518 M
(ry) s
179 518 M
(y o) s
191 518 M
(of) s
197 518 M
(f d) s
209 518 M
(do) s
215 518 M
(oc) s
221 518 M
(cu) s
227 518 M
(um) s
233 518 M
(me) s
239 518 M
(en) s
245 518 M
(nt) s
251 518 M
(ta) s
257 518 M
(at) s
263 518 M
(ti) s
269 518 M
(io) s
275 518 M
(on) s
281 518 M
(n:) s
287 518 M
(:) s
5 496 M
(              warp) s
5 463 M
(F) s
5 463 M
(FI) s
11 463 M
(IL) s
17 463 M
(LE) s
23 463 M
(ES) s
29 463 M
(S) s
5 452 M
(       There are no configuration files.) s
5 408 M
(A) s
5 408 M
(AU) s
11 408 M
(UT) s
17 408 M
(TH) s
23 408 M
(HO) s
29 408 M
(OR) s
35 408 M
(RS) s
41 408 M
(S) s
5 397 M
(       George  H. Fisher, SSL UC Berkeley <fisher at ssl dot berkeley dot edu>) s
5 386 M
(       Brian T. Welsch, SSL UC Berkeley <welsch at ssl dot berkeley dot edu>) s
5 364 M
(S) s
5 364 M
(SE) s
11 364 M
(EE) s
17 364 M
(E A) s
29 364 M
(AL) s
35 364 M
(LS) s
41 364 M
(SO) s
47 364 M
(O) s
5 353 M
(       source code of v) s
137 353 M
(vc) s
143 353 M
(ci) s
149 353 M
(im) s
155 353 M
(ma) s
161 353 M
(ag) s
167 353 M
(ge) s
173 353 M
(e1) s
179 353 M
(1i) s
185 353 M
(in) s
191 353 M
(n.) s
197 353 M
(.p) s
203 353 M
(pr) s
209 353 M
(ro) s
215 353 M
(o \(IDL procedure\),  source  code  of  v) s
443 353 M
(vc) s
449 353 M
(ci) s
455 353 M
(im) s
461 353 M
(m-) s
467 353 M
(-) s
5 342 M
(       a) s
47 342 M
(ag) s
53 342 M
(ge) s
59 342 M
(e2) s
65 342 M
(2o) s
71 342 M
(ou) s
77 342 M
(ut) s
83 342 M
(t.) s
89 342 M
(.p) s
95 342 M
(pr) s
101 342 M
(ro) s
107 342 M
(o  \(IDL  procedure\),  and  source code of v) s
359 342 M
(vc) s
365 342 M
(ci) s
371 342 M
(im) s
377 342 M
(ma) s
383 342 M
(ag) s
389 342 M
(ge) s
395 342 M
(e1) s
401 342 M
(1i) s
407 342 M
(in) s
413 342 M
(n.) s
419 342 M
(.p) s
425 342 M
(pr) s
431 342 M
(ro) s
437 342 M
(o \(IDL) s
5 331 M
(       procedure\), and source code of s) s
233 331 M
(sh) s
239 331 M
(hi) s
245 331 M
(if) s
251 331 M
(ft) s
257 331 M
(t_) s
263 331 M
(_f) s
269 331 M
(fr) s
275 331 M
(ra) s
281 331 M
(ac) s
287 331 M
(c2) s
293 331 M
(2d) s
299 331 M
(d.) s
305 331 M
(.p) s
311 331 M
(pr) s
317 331 M
(ro) s
323 331 M
(o \(IDL procedure\).) s
5 287 M
(Unix/Linux                        APRIL 2009                        WARP\(1.01\)) s
_R
S
%%Trailer
%%Pages: 2
%%DocumentNeededResources: font Courier-Bold Courier 
%%EOF
